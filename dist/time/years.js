"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.years = void 0;
const index_1 = require("../locale/index");
exports.years = (year, local) => {
    const yearsSplit = String(year).split('.');
    if (+yearsSplit[0] === 0 || +yearsSplit[0] === 1) {
        switch (local) {
            case 'es':
                return index_1.yearsEs(1);
            case 'en':
                return index_1.yearsEn(1);
            case 'pt':
                return index_1.yearsPt(1);
            default: return index_1.yearsEn(1);
        }
    }
    else {
        switch (local) {
            case 'es':
                return index_1.yearsEs(+yearsSplit[0]);
            case 'en':
                return index_1.yearsEn(+yearsSplit[0]);
            case 'pt':
                return index_1.yearsPt(+yearsSplit[0]);
            default: return index_1.yearsEn(+yearsSplit[0]);
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieWVhcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdGltZS95ZWFycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBNEQ7QUFHL0MsUUFBQSxLQUFLLEdBQUcsQ0FBRSxJQUFZLEVBQUUsS0FBYSxFQUFXLEVBQUU7SUFFM0QsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFFLElBQUksQ0FBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUU3QyxJQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFFM0MsUUFBUyxLQUFLLEVBQUc7WUFFVCxLQUFLLElBQUk7Z0JBQ0wsT0FBTyxlQUFPLENBQUUsQ0FBQyxDQUFFLENBQUM7WUFFeEIsS0FBSyxJQUFJO2dCQUNMLE9BQU8sZUFBTyxDQUFFLENBQUMsQ0FBRSxDQUFDO1lBRXhCLEtBQUssSUFBSTtnQkFDTCxPQUFPLGVBQU8sQ0FBRSxDQUFDLENBQUUsQ0FBQztZQUV4QixPQUFPLENBQUMsQ0FBQyxPQUFPLGVBQU8sQ0FBRSxDQUFDLENBQUUsQ0FBQztTQUVwQztLQUVSO1NBQU07UUFFSCxRQUFTLEtBQUssRUFBRztZQUVULEtBQUssSUFBSTtnQkFDTCxPQUFPLGVBQU8sQ0FBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBRXJDLEtBQUssSUFBSTtnQkFDTCxPQUFPLGVBQU8sQ0FBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBRXJDLEtBQUssSUFBSTtnQkFDTCxPQUFPLGVBQU8sQ0FBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBRXJDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sZUFBTyxDQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7U0FFakQ7S0FFSjtBQUVMLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHllYXJzRXMsIHllYXJzRW4sIHllYXJzUHQgfSBmcm9tICcuLi9sb2NhbGUvaW5kZXgnO1xyXG5pbXBvcnQgeyBsb2NhbGUgfSBmcm9tICcuLi90eXBlcy9sb2NhbGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHllYXJzID0gKCB5ZWFyOiBudW1iZXIsIGxvY2FsOiBsb2NhbGUgKTogc3RyaW5nID0+IHtcclxuXHJcbiAgICBjb25zdCB5ZWFyc1NwbGl0ID0gU3RyaW5nKCB5ZWFyICkuc3BsaXQoJy4nKTtcclxuXHJcbiAgICBpZiAoICt5ZWFyc1NwbGl0WzBdID09PSAwIHx8ICt5ZWFyc1NwbGl0WzBdID09PSAxKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIHN3aXRjaCAoIGxvY2FsICkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBjYXNlICdlcyc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB5ZWFyc0VzKCAxICk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2VuJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHllYXJzRW4oIDEgKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAncHQnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geWVhcnNQdCggMSApO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiByZXR1cm4geWVhcnNFbiggMSApO1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgc3dpdGNoICggbG9jYWwgKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgY2FzZSAnZXMnOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB5ZWFyc0VzKCAreWVhcnNTcGxpdFswXSApO1xyXG5cclxuICAgICAgICAgICAgICAgIGNhc2UgJ2VuJzpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geWVhcnNFbiggK3llYXJzU3BsaXRbMF0gKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjYXNlICdwdCc6XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHllYXJzUHQoICt5ZWFyc1NwbGl0WzBdICk7XHJcblxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogcmV0dXJuIHllYXJzRW4oICt5ZWFyc1NwbGl0WzBdICk7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG59OyJdfQ==