"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hours = void 0;
const index_1 = require("../locale/index");
exports.hours = (hours, local) => {
    const hourSplit = String(hours).split('.');
    if (+hourSplit[0] === 1) {
        switch (local) {
            case 'es':
                return index_1.hoursEs(1);
            case 'en':
                return index_1.hoursEn(1);
            case 'pt':
                return index_1.hoursPt(1);
            default: return index_1.hoursEn(1);
        }
    }
    else {
        switch (local) {
            case 'es':
                return index_1.hoursEs(+hourSplit[0]);
            case 'en':
                return index_1.hoursEn(+hourSplit[0]);
            case 'pt':
                return index_1.hoursPt(+hourSplit[0]);
            default: return index_1.hoursEn(+hourSplit[0]);
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG91cnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdGltZS9ob3Vycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBNEQ7QUFHL0MsUUFBQSxLQUFLLEdBQUcsQ0FBRSxLQUFhLEVBQUUsS0FBYSxFQUFXLEVBQUU7SUFFN0QsTUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFFLEtBQUssQ0FBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUU3QyxJQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRztRQUVwQixRQUFTLEtBQUssRUFBRztZQUVaLEtBQUssSUFBSTtnQkFDSixPQUFPLGVBQU8sQ0FBRSxDQUFDLENBQUUsQ0FBQztZQUV6QixLQUFLLElBQUk7Z0JBQ0osT0FBTyxlQUFPLENBQUUsQ0FBQyxDQUFFLENBQUM7WUFFekIsS0FBSyxJQUFJO2dCQUNKLE9BQU8sZUFBTyxDQUFFLENBQUMsQ0FBRSxDQUFDO1lBRXpCLE9BQU8sQ0FBQyxDQUFDLE9BQU8sZUFBTyxDQUFFLENBQUMsQ0FBRSxDQUFDO1NBRWpDO0tBR1A7U0FBTTtRQUVBLFFBQVMsS0FBSyxFQUFHO1lBRVosS0FBSyxJQUFJO2dCQUNKLE9BQU8sZUFBTyxDQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7WUFFckMsS0FBSyxJQUFJO2dCQUNKLE9BQU8sZUFBTyxDQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7WUFFckMsS0FBSyxJQUFJO2dCQUNKLE9BQU8sZUFBTyxDQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7WUFFckMsT0FBTyxDQUFDLENBQUMsT0FBTyxlQUFPLENBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUUsQ0FBQztTQUU3QztLQUVQO0FBRUosQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG91cnNFcywgaG91cnNFbiwgaG91cnNQdCB9IGZyb20gJy4uL2xvY2FsZS9pbmRleCc7XHJcbmltcG9ydCB7IGxvY2FsZSB9IGZyb20gJy4uL3R5cGVzL2xvY2FsZSc7XHJcblxyXG5leHBvcnQgY29uc3QgaG91cnMgPSAoIGhvdXJzOiBudW1iZXIsIGxvY2FsOiBsb2NhbGUgKTogc3RyaW5nID0+IHtcclxuXHJcbiAgIGNvbnN0IGhvdXJTcGxpdCA9IFN0cmluZyggaG91cnMgKS5zcGxpdCgnLicpO1xyXG5cclxuICAgaWYgKCAraG91clNwbGl0WzBdID09PSAxICkge1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBzd2l0Y2ggKCBsb2NhbCApIHtcclxuXHJcbiAgICAgICAgICAgICAgIGNhc2UgJ2VzJzpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaG91cnNFcyggMSApO1xyXG5cclxuICAgICAgICAgICAgICAgY2FzZSAnZW4nOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBob3Vyc0VuKCAxICk7XHJcblxyXG4gICAgICAgICAgICAgICBjYXNlICdwdCc6XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhvdXJzUHQoIDEgKTtcclxuXHJcbiAgICAgICAgICAgICAgIGRlZmF1bHQ6IHJldHVybiBob3Vyc0VuKCAxICk7XHJcblxyXG4gICAgICAgICAgfVxyXG5cclxuXHJcbiAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgc3dpdGNoICggbG9jYWwgKSB7XHJcblxyXG4gICAgICAgICAgICAgICBjYXNlICdlcyc6XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhvdXJzRXMoICtob3VyU3BsaXRbMF0gKTtcclxuXHJcbiAgICAgICAgICAgICAgIGNhc2UgJ2VuJzpcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaG91cnNFbiggK2hvdXJTcGxpdFswXSApO1xyXG5cclxuICAgICAgICAgICAgICAgY2FzZSAncHQnOlxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBob3Vyc1B0KCAraG91clNwbGl0WzBdICk7XHJcblxyXG4gICAgICAgICAgICAgICBkZWZhdWx0OiByZXR1cm4gaG91cnNFbiggK2hvdXJTcGxpdFswXSApO1xyXG5cclxuICAgICAgICAgIH1cclxuXHJcbiAgIH1cclxuXHJcbn07XHJcbiJdfQ==