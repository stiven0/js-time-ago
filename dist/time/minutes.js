"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.minutes = void 0;
const index_1 = require("../locale/index");
exports.minutes = (minutes, local) => {
    const minutesSplit = String(minutes).split('.');
    if (+minutesSplit[0] === 1) {
        switch (local) {
            case 'es':
                return index_1.minutesEs(1);
            case 'en':
                return index_1.minutesEn(1);
            case 'pt':
                return index_1.minutesPt(1);
            default: return index_1.minutesEn(1);
        }
    }
    else {
        switch (local) {
            case 'es':
                return index_1.minutesEs(+minutesSplit[0]);
            case 'en':
                return index_1.minutesEn(+minutesSplit[0]);
            case 'pt':
                return index_1.minutesPt(+minutesSplit[0]);
            default: return index_1.minutesEn(+minutesSplit[0]);
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWludXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90aW1lL21pbnV0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkNBQWtFO0FBR3JELFFBQUEsT0FBTyxHQUFHLENBQUUsT0FBZSxFQUFFLEtBQWEsRUFBVyxFQUFFO0lBRWhFLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBRSxPQUFPLENBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFbkQsSUFBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUc7UUFFbkIsUUFBUyxLQUFLLEVBQUc7WUFFVixLQUFLLElBQUk7Z0JBQ0YsT0FBTyxpQkFBUyxDQUFFLENBQUMsQ0FBRSxDQUFDO1lBRTdCLEtBQUssSUFBSTtnQkFDRixPQUFPLGlCQUFTLENBQUUsQ0FBQyxDQUFFLENBQUM7WUFFN0IsS0FBSyxJQUFJO2dCQUNGLE9BQU8saUJBQVMsQ0FBRSxDQUFDLENBQUUsQ0FBQztZQUU3QixPQUFPLENBQUMsQ0FBQyxPQUFPLGlCQUFTLENBQUUsQ0FBQyxDQUFFLENBQUM7U0FFckM7S0FFWDtTQUFNO1FBRUksUUFBUyxLQUFLLEVBQUc7WUFFVixLQUFLLElBQUk7Z0JBQ0YsT0FBTyxpQkFBUyxDQUFFLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7WUFFNUMsS0FBSyxJQUFJO2dCQUNGLE9BQU8saUJBQVMsQ0FBRSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBRTVDLEtBQUssSUFBSTtnQkFDRixPQUFPLGlCQUFTLENBQUUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUU1QyxPQUFPLENBQUMsQ0FBQyxPQUFPLGlCQUFTLENBQUMsQ0FBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUUsQ0FBQztTQUVwRDtLQUVYO0FBRUosQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWludXRlc0VzLCBtaW51dGVzRW4sIG1pbnV0ZXNQdCB9IGZyb20gJy4uL2xvY2FsZS9pbmRleCc7XHJcbmltcG9ydCB7IGxvY2FsZSB9IGZyb20gJy4uL3R5cGVzL2xvY2FsZSc7XHJcblxyXG5leHBvcnQgY29uc3QgbWludXRlcyA9ICggbWludXRlczogbnVtYmVyLCBsb2NhbDogbG9jYWxlICk6IHN0cmluZyA9PiB7XHJcblxyXG4gICAgY29uc3QgbWludXRlc1NwbGl0ID0gU3RyaW5nKCBtaW51dGVzICkuc3BsaXQoJy4nKTtcclxuXHJcbiAgIGlmICggK21pbnV0ZXNTcGxpdFswXSA9PT0gMSApIHtcclxuXHJcbiAgICAgICAgICAgICAgc3dpdGNoICggbG9jYWwgKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICBjYXNlICdlcyc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWludXRlc0VzKCAxICk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICBjYXNlICdlbic6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWludXRlc0VuKCAxICk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICBjYXNlICdwdCc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWludXRlc1B0KCAxICk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiByZXR1cm4gbWludXRlc0VuKCAxICk7XHJcblxyXG4gICAgICAgICAgICAgIH0gICBcclxuXHJcbiAgIH0gZWxzZSB7XHJcbiAgICAgICAgIFxyXG4gICAgICAgICAgICAgIHN3aXRjaCAoIGxvY2FsICkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgY2FzZSAnZXMnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pbnV0ZXNFcyggK21pbnV0ZXNTcGxpdFswXSApO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgY2FzZSAnZW4nOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pbnV0ZXNFbiggK21pbnV0ZXNTcGxpdFswXSApO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgY2FzZSAncHQnOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1pbnV0ZXNQdCggK21pbnV0ZXNTcGxpdFswXSApO1xyXG4gICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDogcmV0dXJuIG1pbnV0ZXNFbigrIG1pbnV0ZXNTcGxpdFswXSApO1xyXG5cclxuICAgICAgICAgICAgICB9IFxyXG5cclxuICAgfSAgICBcclxuXHJcbn07XHJcbiJdfQ==